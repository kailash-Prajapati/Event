pipeline { 
  agent {
    // using agent manchine call by label  
    label 'devops' 
  }
  options {
    // Timeout counter starts AFTER agent is allocated
    timeout(time: 60, unit: 'SECONDS')
  }
    stages{
        stage("Clone Code"){
            steps {
                echo "Cloning the code"
                git branch: 'main', url: 'https://github.com/kailash-Prajapati/Event.git'
            }
        }
        stage("Build"){
            steps {
                echo "Building the image"
                sh "docker build -t event-app ."
            }
        }
        // stage("Push to Docker Hub"){
        //     steps {
        //         echo "Pushing the image to docker hub"
        //         withCredentials([usernamePassword(credentialsId:"dockerHub",passwordVariable:"dockerHubPass",usernameVariable:"dockerHubUser")]){
        //         sh "docker tag my-note-app ${env.dockerHubUser}/my-note-app:latest"
        //         sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPass}"
        //         sh "docker push ${env.dockerHubUser}/my-note-app:latest"
        //         }
        //     }
        // }
        stage("Deploy"){
            steps {
                echo "Deploying the container"
                sh "docker-compose down && docker-compose up -d"
                
            }
        }
    }
}